\relax 
\citation{coutinho}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Introdu\c {c}\~{a}o}{3}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{Intro}{{1}{3}}
\@writefile{toc}{\contentsline {subparagraph}{ O sigilo sempre foi uma arma explorada pelos seres humanos para vencer certas batalhas, mesmo que na cotidiana miss\~{a}o de se comunicar. Foi a partir dessa necessidade que se criou a \textit  {criptografia}, nome dado ao conjunto de t\'ecnicas usadas para se comunicar em c\'odigos. Seu objetivo \'{e} garantir que apenas os envolvidos na comunica\c {c}\~ao possam compreender a mensagem codificada (ou criptogtafada), garantindo que terceiros n\~ao saibam o que foi conversado. }{3}}
\@writefile{toc}{\contentsline {subparagraph}{ Para compreender como funciona o processo de codifica\c {c}\~ao e decodifica\c {c}\~ao faz-se necess\'ario o uso de uma s\'erie de termos t\'ecnicos, e para fins pedag\'ogicos iremos introduzir tais conceitos apresentando um dos primeiros algoritmos criptogr\'aficos que se tem conhecimento, a criptografia de C\'esar.Para mais detalhes sobre o tema, veja \cite  {coutinho}. }{3}}
\@writefile{toc}{\contentsline {subparagraph}{ A chamada \textit  {criptografia de C\'esar}, criada pelo imperador romano C\'esar Augusto, consistia em substituir cada letra da mensagem por outra que estivesse a tr\^es posi\c {c}\~oes a frente, como, por exemplo, a letra \textbf  {A} ser substitu\'ida pela letra \textbf  {D}. }{3}}
\@writefile{toc}{\contentsline {subparagraph}{ Uma forma muito natural de generalizar o algoritmo de C\'esar \'e fazer a troca de cada letra da mensagem por outra que venha em uma posi\c {c}\~ao qualquer fixada. A chamada \textit  {criptografia de substitui\c {c}\~ao monoalfab\'etica} consite em substituir cada letra por outra que ocupe $n$ posi\c {c}\~oes a sua frente, sendo que o n\'umero $n$ \'e conhecido apenas pelo emissor e pelo receptor da mensagem. O n\'umero $n$ \'e a \textit  {chave criptogr\'afica}. Para decifrar a mensagem, precisamos substituir as letras que formam a mensagem criptografada pelas letras que est\~ao $n$ posi\c {c}\~oes antes. }{4}}
\@writefile{toc}{\contentsline {subparagraph}{ O algoritmo monoalfab\'etico tem a caracter\'istica indesejada de ser de f\'acil decodifica\c {c}\~ao, pois possui apenas {26} chaves poss\'iveis, e isso faz com que no m\'aximo em {26} tentativas o c\'odigo seja decifrado. Com o intuito de dificultar a quebra do c\'odigo monoalfab\'etico foram propostas as \textit  {cifras de substitui\c {c}\~ao polialfab\'eticas} em que a chave criptogr\'afica passa a ser uma \textit  {palavra} ao inv\'es de um n\'umero. A ideia \'e usar as posi\c {c}\~oes ocupadas pelas letras da chave para determinar o n\'umero de posi\c {c}\~oes que devemos avan\c {c}ar para obter a posi\c {c}\~ao da letra encriptada. Vejamos, por meio de um exemplo, como funciona esse sistema criptogr\'afico. }{4}}
\@writefile{toc}{\contentsline {subparagraph}{ Sejam ``SENHA'' a nossa chave criptogr\'afica e ``ABOBORA'' a mensagem a ser encriptada. Abaixo colocamos as letras do alfabeto com suas respectivas posi\c {c}\~oes. Observe que repetimos a primeira linha de letras para facilitar a localiza\c {c}\~ao da posi\c {c}\~ao da letra encriptada e usamos a barra para indicar que estamos no segundo ciclo. }{4}}
\@writefile{toc}{\contentsline {subparagraph}{ Vejamos como encriptar a palavra ``ABOBORA''. Iniciamos o processo escrevendo a mensagem. Ao lado de cada letra da mensagem aparece entre par\^enteses o n\'umero que indica a sua posi\c {c}\~ao. Abaixo da mensagem escrevemos as letras da chave criptogr\'afica, repetindo-as de forma c\'iclica quando necess\'ario. Analogamente, ao lado de cada letra da chave aparece entre par\^enteses o n\'umero da posi\c {c}\~ao ocupada de cada letra, e o sinal de soma indica que devemos avan\c {c}ar aquele n\'umero de posi\c c\~oes. Ao final do processo aparecem as letras encriptadas. Entre par\^enteses est\'a a posi\c {c}\~ao resultante da combina\c {c}\~ao das posi\c {c}\~oes da mensagem e da chave. }{5}}
\@writefile{toc}{\contentsline {subparagraph}{ Observe que a encripta\c {c}\~ao polialfab\'etica \'e mais dif\'icil de ser quebrada que a monoalfab\'etica uma vez que letras iguais n\~ao t\^em, necessariamente, a mesma encripta\c {c}\~ao. Observe que neste tipo de criptografia o emissor precisa passar a chave para o receptor da mensagem de forma segura para que o receptor possa decifrar a mensagem, isto \'e, a chave usada para encriptar a mensagem \'e a mesma que deve ser usada para decifrar a mensagem. Veremos que esse \'e justamente o ponto fraco nesse tipo de encripta\c {c}\~ao pois usa a chamada \textit  {chave sim\'etrica}, ou seja, a chave usada pelo emissor para codificar a mensagem \'e a mesma usada pelo receptor para decodificar a mensagem. Nesse processo, a chave deve ser mantida em segredo e bem guardada para garantir que o c\'odigo n\~ao seja quebrado e isso requer algum tipo de contato f\'isico entre emissor e receptor da mensagem. }{5}}
\@writefile{toc}{\contentsline {subparagraph}{ Durante a Primeira Guerra Mundial o contato f\'isico para a troca de chaves era complicado, e isso estimulou a cria\c {c}\~ao de m\'aquinas autom\'aticas de criptografia. O \textit  {Enigma} foi uma dessas m\'aquinas e era utilizada pelos alem\~aes tanto para criptografar como para descriptografar c\'odigos de guerra. Semelhante a uma m\'aquina de escrever, os primeiros modelos foram patenteados por Arthur Scherbius em 1918. Essas m\'aquinas ganharam popularidade entre as for\c {c}as militares alem\~aes devido a facilidade de uso e sua suposta indecifrabilidade do c\'odigo. }{5}}
\citation{shannon}
\citation{newdirections}
\citation{rivest}
\@writefile{toc}{\contentsline {subparagraph}{ O matem\'atico Alan Turing foi o respons\'avel por quebrar o c\'odigo dos alem\~aes durante a Segunda Guerra Mundial. A descoberta de Turing mostrou a fragilidade da criptografia baseada em chave sim\'etrica e colocou novos desafios \`a criptografia. O grande problema passou a ser a quest\~ao dos protocolos, isto \'e, como transmitir a chave para o receptor de forma segura sem que seja necess\'ario o contato f\'isico entre as partes? }{6}}
\@writefile{toc}{\contentsline {subparagraph}{Em 1949, com a publica\c {c}\~ao do artigo \textit  {Communication Theory of Secrecy Systems} \cite  {shannon} de Shannon, temos a inaugura\c {c}\~ao da criptografia moderna. Neste artigo ele escreve matematicamente que cifras teoricamente inquebr\'aveis s\~ao semelhantes as cifras polialfab\'eticas. Com isso ele transformou a criptografia que at\'e ent\~ao era uma arte em uma ci\^encia. }{6}}
\@writefile{toc}{\contentsline {subparagraph}{ Em 1976 Diffie e Hellman publicaram \textit  {New Directions in Cryptography} \cite  {newdirections}. Neste artigo h\'a a introdu\c {c}\~ao ao conceito de \textit  {chave assim\'etrica}, onde h\'a chaves diferentes entre o emissor da mensagem e seu receptor. Com a assimetria de chaves n\~ao era mais necess\'ario um contato t\~ao pr\'oximo entre emissor e receptor. Neste mesmo artigo \'e apresentado o primeiro algoritmo de criptografia de chave assim\'etrica ou como \'e mais conhecido nos dias atuais \textit  {Algoritmo de Criptografia de Chave P\'ublica}, o protocolo de Diffie-Hellman. }{6}}
\@writefile{toc}{\contentsline {subparagraph}{ Um dos algoritmos mais famosos da criptografia de chave p\'ublica \'e o \textit  {RSA}(RIVEST et al, 1983) \cite  {rivest}, algoritmo desenvolvido por Rivest, Shamir e Adleman. Este algoritmo se tornou poular por estar presente em muitas aplica\c {c}\~oes de alta seguran\c {c}a, como bancos, sistemas militares e servidores de internet. }{6}}
\@writefile{toc}{\contentsline {subparagraph}{ Para que se possa compreender por completo o algoritmo faz-se necess\'ario possuir alguns conhecimentos em Teoria de n\'umeros como fatora\c {c}\~ao e aritm\'etica modular. Estes conhecimentos ser\~ao apresentados mais frente neste trabalho. }{6}}
\@writefile{toc}{\contentsline {subparagraph}{ No algoritmo RSA existe uma chave p\'ublica $n$, que \'e a multiplica\c {c}\~ao dos primos $p$ e $q$. O emissor E codifica a mensagem usando um n\'umero primo $p$. Em seguida E envia publicamente a mensagem codificada junto com a chave $n$ para o receptor R. R possui o n\'umero $q$, que juntamente ao n\'umero $n$ servem para decodificar a mensagem. }{6}}
\citation{intGauss}
\@writefile{toc}{\contentsline {subparagraph}{ Embora a quebra do RSA seja aparentemente simples, bastando fatorar $n$ para descobrir seus fatores. Por\'em a dificuldade neste caso n\~ao \'e matem\'atica e sim computacional, pois usa-se como $p$ e $q$ n\'umeros primos muito altos, pr\'oximos a $2^{512}$. Com um n\'umero t\~ao alto um computador comum levaria bem mais que uma vida humana para decifrar a mensagem. }{7}}
\@writefile{toc}{\contentsline {subparagraph}{ Com base nestes conhecimentos sobre criptografia, temos que o objetivo deste trabalho \'e analisar a viabilidade de uma criptografia inspirada pelo algoritmo RSA cl\'assico, a qual substitui os n\'umeros primos pelo conjunto denominado de \textit  {primos de Gauss} \cite  {intGauss}, resultando, assim, no que chamamos por \textit  {criptografia RSA gaussiana}. Para que tal algoritmo seja vi\'avel \'e necess\'ario adaptar uma s\'erie de resultados relativas aos n\'umeros primos aos n\'umero primos de Gauss. Dessa forma, nossa tarefa ser\'a adaptar tanto quanto o poss\'ivel os primos de Gauss \`as demosnta\c {c}\~oes desses teoremas. }{7}}
\@writefile{toc}{\contentsline {subparagraph}{ Como se trata de uma proposta inovadora, deixamos para trabalhos futuros uma an\'alise comparativa entre as criptografias RSA cl\'assica e a RSA gaussiana. }{7}}
\@setckpt{Intro}{
\setcounter{page}{8}
\setcounter{equation}{0}
\setcounter{enumi}{0}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{0}
\setcounter{mpfootnote}{0}
\setcounter{part}{0}
\setcounter{chapter}{1}
\setcounter{section}{0}
\setcounter{subsection}{0}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{0}
\setcounter{table}{0}
\setcounter{btxromaniannumeral}{0}
\setcounter{Th}{0}
}
